/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/behaviors.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/charybdisT.h"

/ {
    /* adjust cooldown waiting period for mouse key layer after activated */

    behaviors {
        my_mt: my_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            display-name = "My-Mod-Tap";
            #binding-cells = <2>;
        };
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <2000>;
    };

    combos {
        compatible = "zmk,combos";

        e_insert_link {
            bindings = <&insertLink>;
            key-positions = <13 14>;
        };

        e-org-find {
            bindings = <&insertOrgFind>;
            key-positions = <14 15>;
        };

        e-org-insert {
            bindings = <&insertOrg>;
            key-positions = <15 16>;
        };

        e-buffer-list {
            bindings = <&e_list_buffer>;
            key-positions = <15 17>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <27 28>;
        };

        shift-shift {
            bindings = <&kp LS(LEFT_SHIFT)>;
            key-positions = <26 27>;
        };

        i-find-all {
            bindings = <&kp LC(LS(F))>;
            key-positions = <25 26>;
        };

        i-m-find-all {
            bindings = <&kp LG(LS(F))>;
            key-positions = <25 26>;
            layers = <1>;
        };

        i-setting {
            bindings = <&kp LC(LA(S))>;
            key-positions = <25 26 27>;
        };

        i-m-setting {
            bindings = <&kp LG(COMMA)>;
            key-positions = <25 26 27>;
            layers = <1>;
        };

        c-s-t {
            bindings = <&kp LC(LS(T))>;
            key-positions = <26 27 28>;
        };

        m-c-s-t {
            bindings = <&kp LG(LS(T))>;
            key-positions = <26 27 28>;
            layers = <1>;
        };

        c-a-s-s {
            bindings = <&kp LC(LA(LS(S)))>;
            key-positions = <25 26 27 28>;
        };

        i-m-project-structure {
            bindings = <&kp LG(SEMICOLON)>;
            key-positions = <25 26 27 28>;
            layers = <1>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <38 39>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <39 40>;
        };

        shift-copy {
            bindings = <&kp LC(LS(C))>;
            key-positions = <38 39 37>;
        };

        shift-paste {
            bindings = <&kp LC(LS(V))>;
            key-positions = <38 39 40>;
        };

        enter-1 {
            bindings = <&kp ENTER>;
            key-positions = <50 51>;
        };

        bang {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 25>;
        };

        at-sign {
            bindings = <&kp AT_SIGN>;
            key-positions = <14 26>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <15 27>;
        };

        dollar-sign {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <17 29>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <25 37>;
        };

        ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <26 38>;
        };

        asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <27 39>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 40>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <29 41>;
        };

        smartnum {
            bindings = <&none>;
            key-positions = <52 53>;
        };

        i-projectv-view {
            bindings = <&kp LA(NUMBER_1)>;
            key-positions = <18 20>;
        };

        i-m-project-view {
            bindings = <&kp LG(NUMBER_1)>;
            key-positions = <18 20>;
            layers = <1>;
        };

        page-up {
            bindings = <&kp PAGE_UP>;
            key-positions = <20 19>;
        };

        page-down {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <20 21>;
        };

        i-create-items {
            bindings = <&kp LA(INS)>;
            key-positions = <21 22>;
        };

        i-m-insert-items {
            bindings = <&kp LG(N)>;
            key-positions = <21 22>;
            layers = <1>;
        };

        j {
            bindings = <&kp J>;
            key-positions = <30 32>;
        };

        enter-2 {
            bindings = <&kp ENTER>;
            key-positions = <32 31>;
        };

        esc-1 {
            bindings = <&kp ESCAPE>;
            key-positions = <32 33>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <33 34>;
        };

        home {
            bindings = <&kp HOME>;
            key-positions = <43 44>;
        };

        end {
            bindings = <&kp END>;
            key-positions = <44 45>;
        };

        insert {
            bindings = <&kp INSERT>;
            key-positions = <45 46>;
        };

        home-2 {
            bindings = <&kp LC(A)>;
            key-positions = <54 55>;
        };

        thumb_1 {
            bindings = <&none>;
            key-positions = <61 58>;
        };

        thumb_2 {
            bindings = <&none>;
            key-positions = <60 59>;
        };

        thumb_3 {
            bindings = <&none>;
            key-positions = <62 63>;
        };

        thumb_4 {
            bindings = <&none>;
            key-positions = <64 65>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <20 32>;
        };

        negative {
            bindings = <&kp MINUS>;
            key-positions = <19 31>;
        };

        splash {
            bindings = <&kp SLASH>;
            key-positions = <22 34>;
        };

        back_slash {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <34 46>;
        };

        idk_1 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 43>;
        };

        idk_2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <44 32>;
        };
    };

    macros {
        insertOrg: insertOrg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp N &kp R &kp I>;
            label = "INSERTORG";
        };

        insertOrgFind: insertOrgFind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp N &kp R &kp F>;
            label = "INSERTORGFIND";
        };

        insertLink: insertLink {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp I &kp L>;
            label = "INSERTLINK";
        };

        e_list_buffer: e_list_buffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SPACE &kp B &kp I>;
            label = "E_LIST_BUFFER";
        };

        i_find_all: i_find_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RCTRL &kp B &kp I>;
            label = "I_FIND_ALL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&studio_unlock  &kp N1        &kp N2       &kp N3                    &kp N4        &kp N5     &kp N6     &kp N7        &kp N8        &kp N9       &kp N0       &studio_unlock
&to 3           &kp Q         &kp W        &kp F                     &kp P         &kp B      &kp J      &kp L         &kp U         &kp Y        &kp SQT      &to 3
&to 2           &hml LGUI A   &hml LALT R  &hml LSHFT S              &hml LCTRL T  &kp G      &kp M      &hmr LCTRL N  &hmr RSHFT E  &hmr LALT I  &hmr LGUI O  &to 2
&to 1           &kp Z         &kp X        &kp C                     &kp D         &kp V      &kp K      &kp H         &kp COMMA     &kp DOT      &kp SEMI     &to 1
&kp LS(LPAR)    &kp LS(RPAR)  &kp UP       &kp DOWN                  &kp BSPC      &kp SPACE  &kp LEFT   &kp RIGHT     &kp LBKT      &kp RBKT
&kp LSHFT       &kp LSHFT     &kp LSHFT    &kp LEFT_SHIFT SMART_NUM  &kp LSHFT     &kp LSHFT  &kp LSHFT
            >;

            label = "Base";
        };

        QWERTY {
            bindings = <
&studio_unlock  &kp N1        &kp N2       &kp N3               &kp N4        &kp N5     &kp N6    &kp N7        &kp N8        &kp N9       &kp N0               &studio_unlock
&to 0           &kp Q         &kp W        &kp E                &kp R         &kp T      &kp Y     &kp U         &kp I         &kp O        &kp P                &to 0
&to 3           &hml LGUI A   &hml LALT S  &hml LSHFT D         &hml LCTRL F  &kp G      &kp H     &hmr LCTRL J  &hmr RSHFT K  &hmr LALT L  &hmr LGUI SEMICOLON  &to 3
&to 2           &kp Z         &kp X        &kp C                &kp V         &kp B      &kp N     &kp M         &kp COMMA     &kp DOT      &kp FSLH             &to 2
&kp LS(LPAR)    &kp LS(RPAR)  &kp UP       &kp DOWN             &kp BSPC      &kp SPACE  &kp LEFT  &kp RIGHT     &kp LBKT      &kp RBKT
&mkp MB4        &mkp MB5      &kp LGUI     &kp LSHFT SMART_NUM  &kp LSHFT     &kp LCTRL  &kp SQT
            >;

            label = "QWERTY";
        };

        L2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans             &trans           &trans      &trans      &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_MUTE  &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp LEFT        &kp DOWN           &kp UP           &kp DOWN    &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans             &trans           &trans      &trans      &trans
&trans  &trans  &trans  &trans  &to 1   &to 1   &trans          &trans             &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
            >;

            label = "Number, Media";
        };

        func {
            bindings = <
&trans           &trans           &trans           &trans           &trans  &trans   &trans           &trans           &trans           &trans           &trans        &trans
&out OUT_TOG     &kp F1           &kp F2           &kp F3           &kp F4  &kp F5   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &trans
&bootloader      &kp F6           &kp F7           &kp F8           &kp F9  &kp F10  &rgb_ug RGB_TOG  &trans           &trans           &trans           &trans        &bootloader
&trans           &kp F11          &kp F12          &trans           &trans  &trans   &trans           &trans           &trans           &trans           &trans        &trans
&rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRD  &to 1   &to 1    &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF
&trans           &trans           &trans           &trans           &trans  &trans   &trans           &trans
            >;

            label = "FUNC";
        };

        mouse {
            bindings = <
&trans    &trans     &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans     &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &kp LC(A)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans     &trans     &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans     &trans     &trans     &mkp LCLK  &trans  &trans  &trans  &trans  &trans
&mkp MB4  &mkp MB5   &mkp MCLK  &mkp RCLK  &trans     &trans  &trans  &trans
            >;

            label = "MOUSE";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        test {
            if-layers = <0>;
            then-layer = <0>;
        };
    };
};

//right hand trackball override
