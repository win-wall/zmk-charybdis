/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <input/processors.dtsi>
#include <dt-bindings/zmk/behaviors.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    /* adjust cooldown waiting period for mouse key layer after activated */

    behaviors {
        my_mt: my_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            display-name = "My-Mod-Tap";
            #binding-cells = <2>;
        };
    };

    ib_toggle_layer: ib_toggle_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <2000>;
    };

    combos {
        compatible = "zmk,combos";

        test {
            bindings = <&kp EXCLAMATION>;
            key-positions = <13 25>;
            layers = <0>;
        };

        test2 {
            bindings = <&kp AT_SIGN>;
            key-positions = <26 14>;
        };

        hash {
            bindings = <&kp HASH>;
            key-positions = <15 27>;
        };

        Dollar_sign {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <17 29>;
        };

        carret {
            bindings = <&kp CARET>;
            key-positions = <25 37>;
        };

        and {
            bindings = <&kp AMPERSAND>;
            key-positions = <38 26>;
        };

        star {
            bindings = <&kp ASTERISK>;
            key-positions = <39 27>;
        };

        l_parent {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <40 28>;
        };

        r_parent {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <29 41>;
        };

        low_negative {
            bindings = <&kp UNDERSCORE>;
            key-positions = <19 31>;
        };

        upper_equal {
            bindings = <&kp PLUS>;
            key-positions = <20 32>;
        };

        why_i {
            bindings = <&kp SLASH>;
            key-positions = <22 34>;
        };

        new_hash {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 43>;
        };

        end_idk {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <44 32>;
        };

        idk {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <45 33>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp A>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp FSLH      &kp N1        &kp N2     &kp N3          &kp N4    &kp N5     &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp FSLH
&kp FSLH      &kp Q         &kp W      &kp F           &kp P     &kp B      &kp J      &kp L      &kp U      &kp Y     &kp SQT   &kp FSLH
&kp FSLH      &kp A         &kp R      &kp S           &kp T     &kp G      &kp M      &kp N      &kp E      &kp I     &kp O     &kp FSLH
&kp FSLH      &kp Z         &kp X      &kp C           &kp D     &kp V      &kp K      &kp H      &kp COMMA  &kp DOT   &kp SEMI  &kp FSLH
&kp LS(LPAR)  &kp LS(RPAR)  &kp UP     &kp DOWN        &kp BSPC  &kp SPACE  &kp LEFT   &kp RIGHT  &kp LBKT   &kp RBKT
&kp LSHFT     &kp LSHFT     &kp LSHFT  &kp LEFT_SHIFT  &kp TAB   &kp ESC    &kp LSHFT  &kp LSHFT
            >;

            label = "Base";
        };

        Nav {
            display-name = "Nav";
            bindings = <
&trans  &trans    &trans        &trans     &trans          &trans  &trans         &kp LC(C)      &kp N     &kp LC(V)       &trans        &trans
&trans  &trans    &trans        &trans     &trans          &trans  &kp C_AC_REDO  &kp C_AC_COPY  &kp UP    &kp C_AC_PASTE  &kp C_AC_CUT  &kp C_AC_UNDO
&trans  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans  &trans         &kp LEFT       &kp DOWN  &kp RIGHT       &trans        &trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans         &kp HOME       &kp END   &kp N           &trans        &trans
&trans  &trans    &trans        &trans     &trans          &trans
            >;
        };

        mouse_layer {
            display-name = "Mouse";

            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
&trans  &trans    &trans        &trans     &trans          &trans  &trans     &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans        &trans     &trans          &trans  &trans     &trans     &trans     &trans     &trans     &trans
&trans  &kp LGUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans  &kp LC(R)  &kp LC(P)  &kp LC(C)  &kp LC(X)  &kp LC(Y)  &trans
&trans  &trans    &trans        &trans     &trans          &trans  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4   &mkp MB5   &trans
&trans  &trans    &trans        &trans     &trans          &trans
            >;
        };

        Media {
            display-name = "Media";
            bindings = <
&trans  &trans    &trans        &trans            &trans          &trans      &rgb_ug RGB_TOG    &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans        &trans
&trans  &trans    &trans        &trans            &trans          &trans      &rgb_ug RGB_EFF    &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans        &trans
&trans  &kp LGUI  &kp LEFT_ALT  &kp LCTRL         &kp LEFT_SHIFT  &trans      &ext_power EP_TOG  &kp C_PREVIOUS   &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT    &trans
&trans  &trans    &trans        &trans            &trans          &trans      &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_CLR
&trans  &trans    &trans        &kp C_PLAY_PAUSE  &trans          &kp C_MUTE
            >;
        };

        NUM {
            display-name = "Number";
            bindings = <
&trans   &trans     &trans     &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp LBKT   &kp N7     &kp N8  &kp N9  &kp RBKT   &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp SEMI   &kp N4     &kp N5  &kp N6  &kp EQUAL  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp GRAVE  &kp N1     &kp N2  &kp N3  &kp FSLH   &trans  &trans  &trans  &trans  &trans  &trans
&kp DOT  &kp N0     &kp MINUS  &trans  &trans  &trans
            >;
        };

        SYM {
            display-name = "Symbol";
            bindings = <
&trans        &trans         &trans         &trans         &trans         &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LS(LBRC)   &kp LS(AMPS)   &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RBRC)  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LS(COLON)  &kp LS(DLLR)   &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(PLUS)  &trans  &trans  &trans  &trans  &trans  &trans
&trans        &kp LS(TILDE)  &kp LS(EXCL)   &kp LS(AT)     &kp LS(POUND)  &kp LS(PIPE)  &trans  &trans  &trans  &trans  &trans  &trans
&kp LS(LPAR)  &kp LS(RPAR)   &kp LS(UNDER)  &trans         &trans         &trans
            >;
        };

        FUNC {
            display-name = "Function";
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans           &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &kp PRINTSCREEN  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans  &trans  &trans  &trans
            >;
        };

        layer_8 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans             &trans           &trans      &trans      &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_MUTE  &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp LEFT        &kp DOWN           &kp UP           &kp DOWN    &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans             &trans           &trans      &trans      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans             &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
            >;
        };

        layer_9 {
            bindings = <
&trans        &trans   &trans   &trans  &trans  &trans   &trans        &trans        &trans        &trans        &trans        &trans
&out OUT_TOG  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
&bootloader   &kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans        &trans        &trans        &trans        &trans        &bootloader
&trans        &kp F11  &kp F12  &trans  &trans  &trans   &trans        &trans        &trans        &trans        &trans        &trans
&trans        &trans   &trans   &trans  &trans  &trans   &trans        &trans        &trans        &trans
&trans        &trans   &trans   &trans  &trans  &trans   &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        test {
            if-layers = <0>;
            then-layer = <0>;
        };
    };
};

//right hand trackball override
